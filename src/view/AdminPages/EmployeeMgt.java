/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view.AdminPages;

import Dao.EmployeeDao;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author ingab
 */
public class EmployeeMgt extends javax.swing.JInternalFrame {

    DefaultTableModel tableModel = new DefaultTableModel();
    /** Creates new form EmployeeMgt */
    public EmployeeMgt() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        addTableColumnsHeader();
        addTableRowData();
        EmployeeDao dao = new EmployeeDao();
        empIdTxt.setText(dao.generate_empId());
    }

    
    private void addTableColumnsHeader(){        
        tableModel.addColumn("empId");
        tableModel.addColumn("firstName");
        tableModel.addColumn("LastName");
        tableModel.addColumn("Phone");
        tableModel.addColumn("Salary");
        tableModel.addColumn("Password");
        tableModel.addColumn("role");
        tableModel.addColumn("UserName");    
        EmployeeTable.setModel(tableModel);
    }
    
    private void addTableRowData(){
        tableModel.setRowCount(0);
        EmployeeDao empdao = new EmployeeDao();
        List<Employee> employees = empdao.retrieveEmployee();
        for(Employee theemployee: employees){
            tableModel.addRow(new Object[]{
                theemployee.getEmp_id(),
                theemployee.getEmp_fname(),
                theemployee.getEmp_lname(),
                theemployee.getPhone(),
                theemployee.getEmp_salary(),
                theemployee.getPasswd(),
                theemployee.getRole(),
                theemployee.getUsername(),
            });
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        fnameTxt = new javax.swing.JTextField();
        lnameTxt = new javax.swing.JTextField();
        salaryTxt = new javax.swing.JTextField();
        roleTxt = new javax.swing.JTextField();
        usernameTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JPasswordField();
        confirmPasswordTxt = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        EmployeeTable = new javax.swing.JTable();
        registerBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchIdTxt = new javax.swing.JTextField();
        empIdTxt = new javax.swing.JLabel();
        phoneTxt = new javax.swing.JTextField();
        resetBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 235, 216));

        jPanel1.setBackground(new java.awt.Color(255, 235, 216));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("First Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 89, -1, -1));

        jLabel4.setText("Last Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 151, -1, -1));

        jLabel6.setText("Phone");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 232, -1, -1));

        jLabel7.setText("Employee Id");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 37, -1, -1));

        jLabel8.setText("Salary");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 292, -1, -1));

        jLabel9.setText("Role");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 348, -1, -1));

        jLabel10.setText("Password");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 474, -1, -1));

        jLabel11.setText("Username");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 392, -1, -1));

        jLabel12.setText("Confirm Password");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 506, -1, -1));
        jPanel1.add(fnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 130, -1));
        jPanel1.add(lnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 130, 30));
        jPanel1.add(salaryTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 130, -1));

        roleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleTxtActionPerformed(evt);
            }
        });
        jPanel1.add(roleTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 345, 130, -1));
        jPanel1.add(usernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 389, 130, -1));
        jPanel1.add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 471, 130, -1));
        jPanel1.add(confirmPasswordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 506, 130, -1));

        EmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        EmployeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(EmployeeTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 520, -1));

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });
        jPanel1.add(registerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 616, -1, -1));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 616, -1, -1));

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 620, -1, -1));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(722, 543, -1, -1));
        jPanel1.add(searchIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 546, 118, -1));
        jPanel1.add(empIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 130, 20));

        phoneTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTxtActionPerformed(evt);
            }
        });
        jPanel1.add(phoneTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 130, -1));

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel1.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 620, -1, -1));

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1186, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleTxtActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
         if (empIdTxt.getText().trim().isEmpty() || fnameTxt.getText().trim().isEmpty() ||
            lnameTxt.getText().trim().isEmpty() || salaryTxt.getText().trim().isEmpty() ||
             roleTxt.getText().trim().isEmpty() ||
            usernameTxt.getText().trim().isEmpty() || passwordTxt.getText().trim().isEmpty() ||
            confirmPasswordTxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill All Fields", "Empty Field", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if passwords match
        if (!passwordTxt.getText().equals(confirmPasswordTxt.getText())) {
            JOptionPane.showMessageDialog(this, "Passwords do not match", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create an Employee object
        Employee employee = new Employee();
        employee.setEmp_id(empIdTxt.getText());
        employee.setEmp_fname(fnameTxt.getText());
        employee.setEmp_lname(lnameTxt.getText());
        employee.setEmp_salary(Float.parseFloat(salaryTxt.getText()));
        employee.setUsername(usernameTxt.getText());
        employee.setRole(roleTxt.getText());
        employee.setPhone(phoneTxt.getText());
        employee.setPasswd(passwordTxt.getText());

        // Create an EmployeeDao object and perform the registration
        EmployeeDao employeeDao = new EmployeeDao();
        String feedback = employeeDao.registerEmployee(employee);

        // Display the registration result
        JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_registerBtnActionPerformed

    private void phoneTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTxtActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if (empIdTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please Enter Employee ID", "Empty Field", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Confirm with the user before deleting
    int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this employee?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
    
    if (option == JOptionPane.YES_OPTION) {
        // Create an EmployeeDao object
        EmployeeDao employeeDao = new EmployeeDao();
        
        // Create an Employee object with the ID to be deleted
        Employee employee = new Employee();
        employee.setEmp_id(empIdTxt.getText());

        // Perform the deletion
        String feedback = employeeDao.deleteEmployee(employee);

        // Display the deletion result
        JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);
        addTableRowData();
        resetBtnActionPerformed(evt);;
    }
    
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        empIdTxt.setText("");
        fnameTxt.setText("");
        lnameTxt.setText("");
        salaryTxt.setText("");
        roleTxt.setText("");
        usernameTxt.setText("");
        passwordTxt.setText("");
        confirmPasswordTxt.setText("");
        phoneTxt.setText("");
        registerBtn.setEnabled(true);
        EmployeeDao dao = new EmployeeDao();
        empIdTxt.setText(dao.generate_empId());
    }//GEN-LAST:event_resetBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
            if (empIdTxt.getText().trim().isEmpty() || fnameTxt.getText().trim().isEmpty() ||
           lnameTxt.getText().trim().isEmpty() || salaryTxt.getText().trim().isEmpty() ||
           roleTxt.getText().trim().isEmpty() || usernameTxt.getText().trim().isEmpty() ||
           passwordTxt.getText().trim().isEmpty() || confirmPasswordTxt.getText().trim().isEmpty()) {
           JOptionPane.showMessageDialog(this, "Please Fill All Fields", "Empty Field", JOptionPane.ERROR_MESSAGE);
           return;
       }

       // Check if passwords match
       if (!passwordTxt.getText().equals(confirmPasswordTxt.getText())) {
           JOptionPane.showMessageDialog(this, "Passwords do not match", "Error", JOptionPane.ERROR_MESSAGE);
           return;
       }

       // Create an Employee object
       Employee employee = new Employee();
       employee.setEmp_id(empIdTxt.getText());
       employee.setEmp_fname(fnameTxt.getText());
       employee.setEmp_lname(lnameTxt.getText());
       employee.setEmp_salary(Float.parseFloat(salaryTxt.getText()));
       employee.setUsername(usernameTxt.getText());
       employee.setRole(roleTxt.getText());
       employee.setPhone(phoneTxt.getText());
       employee.setPasswd(passwordTxt.getText());

       // Create an EmployeeDao object and perform the update
       EmployeeDao employeeDao = new EmployeeDao();
       String feedback = employeeDao.updateEmployee(employee);

       // Display the update result
       JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_updateBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if (searchIdTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please Enter Employee ID", "Empty Field", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Create an EmployeeDao object
    EmployeeDao employeeDao = new EmployeeDao();

    // Create an Employee object with the ID to be searched
    Employee employee = new Employee();
    employee.setEmp_id(searchIdTxt.getText());

    // Perform the search
    employee = employeeDao.searchEmployee(employee);

    if (employee == null) {
        JOptionPane.showMessageDialog(this, "Employee ID does not Exist", "Result", JOptionPane.INFORMATION_MESSAGE);
    } else {
        // Display the employee information in the form fields
        fnameTxt.setText(employee.getEmp_fname());
        lnameTxt.setText(employee.getEmp_lname());
        salaryTxt.setText(String.valueOf(employee.getEmp_salary()));
        roleTxt.setText(employee.getRole());
        usernameTxt.setText(employee.getUsername());
        passwordTxt.setText(employee.getPasswd());
        confirmPasswordTxt.setText(employee.getPasswd());  // Assuming you have confirmPasswordTxt
        phoneTxt.setText(employee.getPhone());  // Assuming you have phoneTxt
    }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void EmployeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = EmployeeTable.getSelectedRow();

    // Check if a row is selected
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an employee from the table", "No Selection", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Get the values from the selected row
    String empId = EmployeeTable.getValueAt(selectedRow, 0).toString();
    String fname = EmployeeTable.getValueAt(selectedRow, 1).toString();
    String lname = EmployeeTable.getValueAt(selectedRow, 2).toString();
    String salary = EmployeeTable.getValueAt(selectedRow, 4).toString();
    String phone = EmployeeTable.getValueAt(selectedRow, 3).toString();
    String role = EmployeeTable.getValueAt(selectedRow, 6).toString();
    String username = EmployeeTable.getValueAt(selectedRow, 7).toString();
    String password = EmployeeTable.getValueAt(selectedRow, 5).toString();
    // Add more columns as needed

    // Display the values in the form fields
    empIdTxt.setText(empId);
    fnameTxt.setText(fname);
    lnameTxt.setText(lname);
    salaryTxt.setText(salary);
    phoneTxt.setText(phone);
    roleTxt.setText(role);
    usernameTxt.setText(username);
    passwordTxt.setText(password);
    confirmPasswordTxt.setText(password); 
    registerBtn.setEnabled(false);
    }//GEN-LAST:event_EmployeeTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EmployeeTable;
    private javax.swing.JPasswordField confirmPasswordTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel empIdTxt;
    private javax.swing.JTextField fnameTxt;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lnameTxt;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JTextField roleTxt;
    private javax.swing.JTextField salaryTxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchIdTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables

}
